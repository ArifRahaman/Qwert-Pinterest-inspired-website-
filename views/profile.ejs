<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/stylesheets/profile.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css"
        integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.0.0/fonts/remixicon.css" rel="stylesheet" />
    <link href='https://fonts.googleapis.com/css?family=Baloo Bhai' rel='stylesheet'>
</head>

<body>
    <div class="body1">
        <div class="container1">
            <div class="card1">
                <!-- Apply the CSS class to your HTML element -->
                <div class="profile-picture">
                    <form id="uploadform" hidden action="/fileupload" method="post" enctype="multipart/form-data">
                        <input type="file" name="image">
                    </form>
                    <span class="custom-icon-container" id="uploadicon">
                        <i class="ri-pencil-line"></i>
                    </span>
                    <img src="/images/uploads/<%=user.dp%>" alt=".....................,..... Profile  Picture">
                </div>
                <h2 class="name">
                    <%=user.username%>
                </h2>
                <h3 class="username">
                    Full name: <%=user.fullname%>
                </h3>
                <!-- <p class="tagline" placeholder="Give a tagline:" >Tagline</p> -->
                <input type="text" class="destag" id="descriptionInput">
                <button onclick="toggleEditMode()" class="toggle">Edit</button>
                <button onclick="saveAndDisplayDescription()" class="save">Save</button>
                <p id="displayDescription"></p>


                <p></p>
                <!-- <p class="description">Description</p> -->
                <a href="/login" class="button">Logout</a>
                <p> </p>
                <form action="/upload" method="post" enctype="multipart/form-data">
                    <input type="text" name="filecaption" placeholder="Some caption">
                    <input type="file" name="file">
                    <input type="submit">
                </form>
            </div>
        </div>
        <div class="container">
            <div class="cards flex">
                <% user.posts.forEach(function(post) { %>
                    <div class="card"
                        style="width: 12rem; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); background-color: rgb(252, 249, 249);">
                        <img class="card-img-top" src="/images/uploads/<%= post.image %>" alt="......">
                        <div class="card-body">
                            <h5 class="card-title">
                                <%=post.imageText%>
                            </h5>
                        </div>
                    </div>
                    <% }) %>
            </div>
        </div>
    </div>

</body>
<script>
    document.querySelector("#uploadicon").addEventListener("click", function () {
        document.querySelector("#uploadform input").click();
    })
    document.querySelector("#uploadform input").addEventListener("change", function () {
        document.querySelector("#uploadform").submit();
    })
    // Assuming you're using a server-side application with Node.js and Express
    // Make sure to handle requests and database operations on the server side.

    // app.js

    // Use an arbitrary interval (e.g., every 5 seconds) to auto-save the description
    // app.js


    // app.js

    // public/app.js

    let isEditMode = false;
    let originalDescription = "";

    function toggleEditMode() {
        const inputElement = document.getElementById('descriptionInput');
        const editButton = document.querySelector('button:nth-of-type(1)');

        if (isEditMode) {
            // Save the edited description when exiting edit mode
            saveAndDisplayDescription();
            editButton.textContent = "Edit";
        } else {
            // Enter edit mode
            originalDescription = inputElement.value;
            editButton.textContent = "Cancel";
        }

        // Toggle the placeholder based on the edit mode
        inputElement.placeholder = isEditMode ? "Description/tagline" : "";
        inputElement.value = isEditMode ? originalDescription : "";

        // Toggle the edit mode flag
        isEditMode = !isEditMode;
    }

    function autoSaveDescription() {
        // Auto-saving can be implemented if needed
    }

    function saveAndDisplayDescription() {
        const inputElement = document.getElementById('descriptionInput');
        const displayElement = document.getElementById('displayDescription');

        // Save the description
        const description = inputElement.value;

        // Update the innerHTML of the display element
        displayElement.innerHTML = `Description: ${description}`;

        // Save the description on the server side
        saveDescription(description);
    }

    function saveDescription(description) {
        // Make an HTTP request to your server to save the description
        fetch('/save-description', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ description }),
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                console.log('Description saved:', data);
            })
            .catch(error => {
                console.error('Error saving description:', error);
            });
    }

    // Fetch the stored description on page load
    document.addEventListener('DOMContentLoaded', () => {
        fetch('/get-description')
            .then(response => response.json())
            .then(data => {
                const inputElement = document.getElementById('descriptionInput');
                inputElement.value = data.description;
            })
            .catch(error => {
                console.error('Error fetching description:', error);
            });
    });

</script>

</html>